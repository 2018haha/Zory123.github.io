<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[学习小组]]></title>
    <url>%2Fposts%2F4e7e.html</url>
    <content type="text"><![CDATA[Source and JudgeCQOI2014bzoj3442 Record1h Analysis请先思考后再展开 第一想法显然是网络流，主要有两点不会处理： 每个小组参加人数的平方 不要求总人数最多 第一个可能是套路，但我忘记了，就是流量为1，费用为平方的差分乘ci第二个问题，也挺妙的……这个技巧必须掌握，就是你从每个人再建去ed一个流量k-1费用0的边]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>网络流</tag>
        <tag>难度2</tag>
        <tag>好题</tag>
        <tag>出题</tag>
        <tag>复习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【CQOI2014】危桥]]></title>
    <url>%2Fposts%2F3001.html</url>
    <content type="text"><![CDATA[Source and JudgeCQOI2014loj2239 Record1h Analysis请先思考后再展开 https://www.luogu.org/blog/39887/solution-p3163]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>网络流</tag>
        <tag>难度2</tag>
        <tag>好题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【COCI2013】hiperprostor]]></title>
    <url>%2Fposts%2F2fdd.html</url>
    <content type="text"><![CDATA[Source and JudgeCOCI2013bzoj3482 Record2h Analysis请先思考后再展开 对于每个st，用最短路求出f(k,ed)表示经过了k条x到达ed的最短路那么每个的贡献就是y=kx+f(k,ed)，这m条直线放到坐标系上，维护最底下的部分和往常不同的是，这些是直线而不是点，然后我就搞了个求交点稍微分类讨论一下（利用本题斜率的特点）然后无论x取什么，k超过n就不会有贡献了，所以其实直线只有n条那么复杂度为 $O(q*(n^2log+n))$ 拍了很久各种情况 undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>最短路</tag>
        <tag>难度2</tag>
        <tag>好题</tag>
        <tag>出题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[楼房重建]]></title>
    <url>%2Fposts%2F4690.html</url>
    <content type="text"><![CDATA[Source and Judgebzoj2957 Record1h Analysis请先思考后再展开 一开始的想法：求一个最顶上，斜率递增的面然后分块维护，询问的时候，加入第i个块的时候前面不会被修改，后面就二分一下接在上面，复杂度为 $O(n\sqrt{n log})$显然不能过…… 正解：vali=yi/xi，则求上升序列，这样就好做多了，我连这个都没转化注意到修改只会修改一个位置，我们要尽量利用已有的信息去剪枝考虑分治，设计一个函数solve(l,r,left)表示只考虑这段区间时候的答案，然后左边被left挡住分类讨论一下，如果left挡住左区间的mx，则solve(mid+1,r,left)否则，solve(l,mid,left)+solve(mid+1,r,lmx)注意到右边那个，通过线段树是可以保存的（线段树减少区间个数为2n）设cnt为只考虑本区间的答案，cnt2是上面说的那个东东，只用于右区间根据等差数列公式，时间复杂度为 $O(nlog^2n)$ undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>线段树</tag>
        <tag>难度2</tag>
        <tag>出题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【SCOI2012】滑雪与时间胶囊]]></title>
    <url>%2Fposts%2Fb8b9.html</url>
    <content type="text"><![CDATA[Source and JudgeSCOI2012bzoj2753 Record1h Analysis请先思考后再展开 显然先处理出1能到的节点，这样保证根是1能穿越回去过的点，每条边长只考虑一次，要求去过所有能去的点看起来很像MST，考虑到是有向边，类似于求最小树形图显然不能朱刘算法，但注意到边的方向是由高度决定的 考虑为什么普通的MST不能用，因为加入某条边的时候，你并不知道是把点加了进去还是把点作为祖先……联想dag的树形图————贪心地选择边权最小的入边还有就是，同一高度的点，内部是无向边，谁找谁都没问题那么我们不妨按照高度从大到小枚举每个点（等价于按拓扑序），然后仿照kruskal那样从小到大枚举入边，尝试加入mst undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>难度2</tag>
        <tag>出题</tag>
        <tag>复习</tag>
        <tag>图论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OSU]]></title>
    <url>%2Fposts%2F18cd.html</url>
    <content type="text"><![CDATA[Source and Judgebzoj3450bzoj4318 Record30min Analysis请先思考后再展开 期望入门好题……………………设当前成功的概率为P，考虑一个递推以bzoj3450为例，设g为前面连续长度的期望$f(i)=\sum (1-np) \times p \times 权值和+\sum np \times p \times (权值和+2 \times 连续长度+1)$$f(i)=\sum p \times 权值和+\sum np \times p \times (2*连续长度+1)$$f(i)=\sum f(i-1)+np \times (2 \times g(i-1)+1)$ 然后bzoj4318同理$f(i)=\sum (1-np) \times p \times 权值和+\sum np \times p \times (权值和+3连续长度平方+3连续长度+1)$$f(i)=\sum p \times 权值和+\sum np \times p(3连续长度平方+3连续长度+1)$$f(i)=\sum f(i-1)+np \times (3g1(i-1)+3g2(i-1)+1)$分g1和g2是因为，概率是不平方的，也就是说$连续长度的期望^2 \neq 连续长度平方的期望$ undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>期望</tag>
        <tag>难度2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【BJWC2018】餐巾计划问题]]></title>
    <url>%2Fposts%2F509.html</url>
    <content type="text"><![CDATA[Source and Judgeluogu4480 Record1h Analysis请先思考后再展开 考虑枚举新毛巾的购买数量那么贪心地计算代价即可 打个表出来不难发现新毛巾的选取满足单峰性不过我不会证明，网上目前的两篇题解都在乱说……$O(nlog_{1.5}n)$ undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>难度2</tag>
        <tag>贪心</tag>
        <tag>三分</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【WC2014】时空穿梭]]></title>
    <url>%2Fposts%2F6b1.html</url>
    <content type="text"><![CDATA[ProblemWC2014uoj54 Analysis请先思考后再展开 完整数据范围请前往uoj如果对像本sb一样对高维空间难以理解，可以看看bzoj3518帮助理解 因为在一条直线上，考虑枚举线段两端的节点那么我们不妨枚举跨度向量a，那么在中间的点的数量就是 $gcd(a_i)-1$ ，这个挺好想的吧，因为右上角的节点会被所有【除以gcd的位置】覆盖考虑每种向量实际有多少个，那么不难得出柿子（如果选不到c-2个，组合数为0）$$\begin{aligned}ans&amp;=\sum_{a_t}^{M_t} \sum \sum C_{gcd(a_t)-1}^{c-2} (\prod M_t-a_t)\\&amp;=\sum_{g=1}^{minM} C_{g-1}^{c-2} \times ( \sum_{m_t=1}^{M_t/g} \sum \sum (\prod M_t-m_t \times g) \times [gcd(m)=1] )\\&amp;然后套路地莫反一下（目的是取消之间的依赖性，利用乘法分配律降低复杂度）\\&amp;=\sum_{g=1}^{minM} C_{g-1}^{c-2} \times ( \sum_{m_t=1}^{M_t/g} \sum \sum (\prod M_t-m_t \times g) \times (\sum_{d|gcd(m_i)} \mu(d)) )\\&amp;=\sum_{g=1}^{minM} C_{g-1}^{c-2} \times ( \sum_{d=1}^{minM/g} \mu(d) \times \prod (\sum_{i=1}^{\frac{M_t}{dg}} M_t-i \times dg) )\\&amp;看到这个形式，做题多的不难发现枚举dg会方便很多\\&amp;=\sum_{D=1}^{minM} (\prod ( \sum_{i=0}^{\frac{M_t}{D}} M_t-i \times D )) \times (\sum_{g|D} C_{g-1}^{c-2} \mu(D/g))\\&amp;=\sum_{D=1}^{minM} (\prod ( (M_t/D) \times M_t-D \times (M_t/D)*(M_t/D+1)/2 )) \times (\sum_{g|D} C_{g-1}^{c-2} \mu(D/g))\\\end{aligned}$$后面那个 cmlogm 预处理为f(c,D)，则每组数据的复杂度为nmlogm到此为止都比较常规，然而还是无法处理多组数据，主要在于致命的枚举D此时很多人肯定会观察到式子中的整除，公所周知现在不同的 $\frac{M_t}{D}$ 只有 $n \sqrt m$ 个但是看到柿子中还有一个D，非常麻烦，但也仅仅只有这个东西是麻烦的，于是我们不妨把D当做未知数！所以我们依然可以用数论分块得出当前D的区间dl和dr，这段区间内中间的东西是个关于D的多项式，可以 $n^2$ 计算出 $D^i$ 的系数a$ans=\sum_{i=0}^n a_i \times ( \sum_{dl}^{dr} f(D) \times D^i )$后面那个可以cnM计算前缀和 组合数用递推式算f(i,c,D)枚举倍数暴力预处理总复杂度为 $O(cmlogm+cnm+Tn^3\sqrt m)$ undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>难度2</tag>
        <tag>好题</tag>
        <tag>莫反</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【TJOI2015】线性代数]]></title>
    <url>%2Fposts%2F1b03.html</url>
    <content type="text"><![CDATA[ProblemTJOI2015bzoj3996 Analysis请先思考后再展开 把题意转化为点有点权，边有边权，求权值和最大的点导出子图然后想了想普通的网络流，感觉无法解决，然后就不会了其实是个最小割……好久没用了就完全没想到其实有经验的话，这种决策类的东西，不能贪心基本都是网络流了吧 最大化答案，即最大化总边权+点权-被舍去的部分如果一条边的两个点都没有被舍去，那么边权就必须舍去基于这个思路构图就好了]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>难度2</tag>
        <tag>好题</tag>
        <tag>最小割</tag>
        <tag>出题</tag>
        <tag>复习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小奇挖矿]]></title>
    <url>%2Fposts%2F1596.html</url>
    <content type="text"><![CDATA[ProblemNOIP模拟赛 Analysis请先思考后再展开 wo shi sb 考虑每个a的系数，这样就能直接做了undefined]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>难度2</tag>
        <tag>出题</tag>
        <tag>乱搞</tag>
      </tags>
  </entry>
</search>
